"""
Django settings for atarasov project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import datetime
from os.path import abspath, dirname, join, normpath

import os
import environ


# -------------------------------------------------------------- #
# ENV SETUP                                                      #
# -------------------------------------------------------------- #
env = environ.Env(
    DEBUG=(bool, False)
)
environ.Env.read_env()
root = environ.Path(__file__) - 3

# eshop directory path
BASE_DIR = root()

# -------------------------------------------------------------- #
# GENERAL                                                        #
# -------------------------------------------------------------- #
DEBUG = env('DEBUG')

SECRET_KEY = env('SECRET_KEY')

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True

APPEND_SLASH = False

LOGIN_URL = '/account/signin/'
LOGIN_REDIRECT_URL = '/'

LOGOUT_REDIRECT_URL = '/'

if not DEBUG:
    ALLOWED_HOSTS = ['atarasov.ru', ]


CRISPY_TEMPLATE_PACK = 'bootstrap4'

JWT_EXPIRATION_DELTA = datetime.timedelta(seconds=900) # 15min


TELEGRAM_BOT_TOKEN = env('TELEGRAM_BOT_TOKEN')
TWITCH_TOKEN = env('TWITCH_TOKEN')
# -------------------------------------------------------------- #
# AUTHENTICATION                                                 #
# -------------------------------------------------------------- #
AUTH_USER_MODEL = 'account.User'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'apps.account.auth_backends.EmailAuthBackend',
    'oauth2_provider.backends.OAuth2Backend',
]


# -------------------------------------------------------------- #
# DATABASES                                                      #
# -------------------------------------------------------------- #
DATABASES = {
    'default': env.db(),
}

# -------------------------------------------------------------- #
# APPS                                                           #
# -------------------------------------------------------------- #
DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

]

PROJECT_APPS = [
    'apps.blog',
    'apps.account',
    'apps.api',
    'apps.telegram_bot',
    'apps.twitch_api',

]

EXTRA_APPS = [
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'oauth2_provider',
    'crispy_forms',

]
INSTALLED_APPS = DJANGO_APPS + PROJECT_APPS + EXTRA_APPS

# -------------------------------------------------------------- #
# CORS                                                           #
# -------------------------------------------------------------- #
CORS_ORIGIN_ALLOW_ALL = True

# -------------------------------------------------------------- #
# REST_FRAMEWORK                                                 #
# -------------------------------------------------------------- #
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',

    ],
}

# -------------------------------------------------------------- #
# MIDDLEWARE                                                     #
# -------------------------------------------------------------- #
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',
]

# -------------------------------------------------------------- #
# URLS                                                           #
# -------------------------------------------------------------- #
ROOT_URLCONF = 'core.urls'
WSGI_APPLICATION = 'wsgi.application'
# -------------------------------------------------------------- #
# TEMPLATES                                                      #
# -------------------------------------------------------------- #
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "core/templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# -------------------------------------------------------------- #
# PASSWORD                                                       #
# -------------------------------------------------------------- #
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOG_DIR = (environ.Path(__file__) - 4)() + '/logs/'
# -------------------------------------------------------------- #
# LOGGING                                                        #
# -------------------------------------------------------------- #
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '\n[{asctime}] {levelname:.1s} [{name}|{lineno} строка]: {message}',
            'datefmt': '%d/%b/%y %H:%M',
            'style': '{',
        }
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOG_DIR + 'django.log',
            'formatter': 'verbose',
            'maxBytes': 100000,
            'backupCount': 10,
        },
        'twitch_api_file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOG_DIR + 'twitch.log',
            'formatter': 'verbose',
            'maxBytes': 100000,
            'backupCount': 10,
        },
        'telegram_bot_file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOG_DIR + 'telegram_bot.log',
            'formatter': 'verbose',
            'maxBytes': 100000,
            'backupCount': 10,
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },

    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': True,
        },
        'apps.twitch_api': {
            'handlers': ['console', 'twitch_api_file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'apps.telegram_bot': {
            'handlers': ['console', 'telegram_bot_file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# -------------------------------------------------------------- #
# SECURITY                                                       #
# -------------------------------------------------------------- #
SECURE_BROWSER_XSS_FILTER = True

X_FRAME_OPTIONS = 'DENY'

SESSION_COOKIE_HTTPONLY = True

CSRF_COOKIE_HTTPONLY = True


# settings for SSL project only
if not DEBUG:
    SECURE_SSL_REDIRECT = True

    SESSION_COOKIE_SECURE = True

    SECURE_HSTS_SECONDS = 3600
    SECURE_HSTS_PRELOAD = True
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True

    SECURE_CONTENT_TYPE_NOSNIFF = True

    CSRF_COOKIE_SECURE = True

# -------------------------------------------------------------- #
# STATIC                                                         #
# -------------------------------------------------------------- #
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_DIRS = (
    normpath(join(BASE_DIR, 'core/static')),
)
# -------------------------------------------------------------- #
# MEDIA                                                          #
# -------------------------------------------------------------- #
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

